# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:ios)

platform :ios do
  lane :appstore_profile do
    setup_ci

    match(
    type: "appstore",
    app_identifier:["com.pokitmons.pokit", "com.pokitmons.pokit.ShareExtension"],
    readonly: true
    )
  end

  lane :development_profile do
    setup_ci

    match(
    type: "development",
    app_identifier:["com.pokitmons.pokit", "com.pokitmons.pokit.ShareExtension"],
    readonly: true
    )
  end

  lane :build do
    build_app(
    workspace: "Pokit.xcworkspace",
    scheme: "App",
    configuration: "Debug",
    export_method: "development",
    export_options: {
        provisioningProfiles: {
          "com.pokitmons.pokit" => "match Development com.pokitmons.pokit",
          "com.pokitmons.pokit.ShareExtension" => "match Development com.pokitmons.pokit.ShareExtension"
        }
    }
    )
  end

  lane :archive do
    api_key = app_store_connect_api_key(
    key_id: ENV['APP_STORE_CONNECT_KEY_ID'],
    issuer_id: ENV['APP_STORE_CONNECT_ISSUER_ID'],
    key_content: ENV['APP_STORE_CONNECT_API']
    )

    latest_build_number = latest_testflight_build_number(
    api_key: api_key,
    app_identifier: "com.pokitmons.pokit"
    )

    increment_build_number(
    xcodeproj: "Projects/App/App.xcodeproj",
    build_number: (latest_build_number + 1).to_s
    )

    build_app(
    workspace: "Pokit.xcworkspace",
    scheme: "App",
    configuration: "Release",
    export_method: "app-store",
    export_options: {
        provisioningProfiles: {
          "com.pokitmons.pokit" => "match AppStore com.pokitmons.pokit",
          "com.pokitmons.pokit.ShareExtension" => "match AppStore com.pokitmons.pokit.ShareExtension"
        }
    }
    )
  end

  lane :testflight_release do
    api_key = app_store_connect_api_key(
    key_id: ENV['APP_STORE_CONNECT_KEY_ID'],
    issuer_id: ENV['APP_STORE_CONNECT_ISSUER_ID'],
    key_content: ENV['APP_STORE_CONNECT_API']
    )

    upload_to_testflight(
    api_key: api_key,
    distribute_external: true,
    groups: ["Pokitmons"],
    changelog: ""
    )
  end

  lane :appstore_release do
    api_key = app_store_connect_api_key(
    key_id: ENV['APP_STORE_CONNECT_KEY_ID'],
    issuer_id: ENV['APP_STORE_CONNECT_ISSUER_ID'],
    key_content: ENV['APP_STORE_CONNECT_API']
    )

    release_notes = File.read("release_notes.txt")

    upload_to_app_store(
    api_key: api_key,
    skip_metadata: true,
    skip_screenshots: true,
    precheck_include_in_app_purchases: false,
    release_notes: {
      "ko" => release_notes
    },
    submit_for_review: true,
    automatic_release: true
    )
  end

  lane :update_github_release do
    require 'spaceship'

    api_key = app_store_connect_api_key(
    key_id: ENV['APP_STORE_CONNECT_KEY_ID'],
    issuer_id: ENV['APP_STORE_CONNECT_ISSUER_ID'],
    key_content: ENV['APP_STORE_CONNECT_API']
    )

    Spaceship::ConnectAPI.login(api_key: api_key)

    app = Spaceship::ConnectAPI::App.find("com.pokitmons.pokit")

    live_version = app.get_live_version
    app_state = live_version.app_store_state
    app_version = live_version.version_string

    if app_state == 'READY_FOR_SALE'
      pr_number = ENV['PR_NUMBER']
      pr_body = sh("gh pr view #{pr_number} --json body --jq '.body'")
      release_notes = pr_body.strip

      # GitHub 릴리즈 버전 및 릴리즈 노트 업데이트
      sh("gh release create v#{app_version} --notes '#{release_notes}'")
    end
  end
end
