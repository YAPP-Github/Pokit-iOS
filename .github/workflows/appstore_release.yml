# This workflow will build a Swift project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-swift

name: appstore-release

on:
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest-stable

    - uses: shimataro/ssh-key-action@v2
      with:
        key: ${{ secrets.SSH_KEY }}
        known_hosts: ${{ secrets.KNOWN_HOSTS }}

    - name: initial mise
      run: |
        curl https://mise.jdx.dev/install.sh | sh
        echo "$HOME/.local/share/mise/bin" >> $GITHUB_PATH
        echo "$HOME/.local/share/mise/shims" >> $GITHUB_PATH

    - name: initial tuist
      run: mise install tuist

    - name: Generate Project
      env:
        MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
        DEVELOPMENT_TEAM: ${{ secrets.DEVELOPMENT_TEAM }}
      run: |
        fastlane appstore_profile
        make release

    - name: Build Archive
      env:
        APP_STORE_CONNECT_KEY_ID: ${{ secrets.APP_STORE_CONNECT_KEY_ID }}
        APP_STORE_CONNECT_ISSUER_ID: ${{ secrets.APP_STORE_CONNECT_ISSUER_ID }}
        APP_STORE_CONNECT_API: ${{ secrets.APP_STORE_CONNECT_API }}
      run: fastlane archive

    - name: Appstore Release
      env:
        APP_STORE_CONNECT_KEY_ID: ${{ secrets.APP_STORE_CONNECT_KEY_ID }}
        APP_STORE_CONNECT_ISSUER_ID: ${{ secrets.APP_STORE_CONNECT_ISSUER_ID }}
        APP_STORE_CONNECT_API: ${{ secrets.APP_STORE_CONNECT_API }}
      run: fastlane appstore_release
